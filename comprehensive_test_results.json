{
  "timestamp": "2025-10-21T20:06:27.045886",
  "tests": {
    "build": {
      "success": true,
      "configure_output": "-- Policy: No deprecated libraries enforced\n-- Qt deprecation baseline: 6.10.0\n-- Deprecation warnings: treated as errors\n-- The CXX compiler identification is GNU 11.5.0\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /usr/bin/c++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Looking for C++ include pthread.h\n-- Looking for C++ include pthread.h - found\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n-- Found Threads: TRUE  \n-- Performing Test HAVE_STDATOMIC\n-- Performing Test HAVE_STDATOMIC - Success\n-- Found WrapAtomic: TRUE  \n-- Found OpenGL: /usr/lib64/libOpenGL.so   \n-- Found WrapOpenGL: TRUE  \n-- Found WrapVulkanHeaders: /usr/include  \n-- Found XKB: /usr/lib64/libxkbcommon.so (found suitable version \"1.6.0\", minimum required is \"0.9.0\") \n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/ec2-user/workspace/phoenix/build-test-mac\n",
      "build_output": "[  5%] Automatic MOC and UIC for target phoenix_app\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\nAutoMoc: Could not initialize license client: Could not acquire lock file for client. Some other process might be using it.\nCannot acquire license to use qtframework.\n\nIf you have a valid commercial license, please create a bug report to Qt Bugtracker:\nhttps://bugreports.qt.io/projects/QLS\n\nAttach the above details to the bug report.\n\nAdditionally, attach the qtlicd_log.txt file of the Qt License Service that can be found from the directory of this Qt installation.\n\nTo bypass the license check entirely, set the environment variable QTFRAMEWORK_BYPASS_LICENSE_CHECK with value 1.\n[  5%] Built target phoenix_app_autogen\n[ 11%] Running rcc for resource phoenix_icons\n[ 17%] Building CXX object CMakeFiles/phoenix_app.dir/phoenix_app_autogen/mocs_compilation.cpp.o\n[ 23%] Building CXX object CMakeFiles/phoenix_app.dir/src/main.cpp.o\n[ 35%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/StepViewer.cpp.o\n[ 35%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/main/MainWindow.cpp.o\n[ 41%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/dialogs/PreferencesDialog.cpp.o\n[ 47%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/dialogs/EnvironmentPage.cpp.o\n[ 52%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/dialogs/LanguagePage.cpp.o\n[ 58%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/themes/ThemeManager.cpp.o\n[ 64%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/splash/PhoenixSplashScreen.cpp.o\n[ 70%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/icons/IconProvider.cpp.o\n[ 76%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/icons/IconBootstrap.cpp.o\n[ 82%] Building CXX object CMakeFiles/phoenix_app.dir/src/ui/icons/PhxIconImageProvider.cpp.o\n[ 88%] Building CXX object CMakeFiles/phoenix_app.dir/src/tools/IconGallery.cpp.o\n[ 94%] Building CXX object CMakeFiles/phoenix_app.dir/build-test-mac/.qt/rcc/qrc_phoenix_icons.cpp.o\n[100%] Linking CXX executable phoenix_app\n[100%] Built target phoenix_app\n",
      "build_errors": ""
    },
    "component_validation": {
      "success": true,
      "output": "\ud83d\ude80 Phoenix UI Component Validation\n==================================================\n\ud83d\udd0d Validating Menu Structure...\n\ud83d\udd0d Validating Toolbar Implementation...\n\ud83d\udd0d Validating Dock Widgets...\n\ud83d\udd0d Validating Icon System...\n\ud83d\udd0d Validating Preferences Dialog...\n\n\ud83d\udcca Validation Summary:\n==============================\n\nMENU_STRUCTURE:\n  \u2705 found_menus: ['createFileMenu', 'createEditorsMenu', 'createAnalysisMenu', 'createToolsMenu', 'createViewMenu', 'createHelpMenu']\n  \u274c missing_menus: []\n  \u2705 setup_menu_found: True\n  \u2705 file_actions_found: ['m_newAction', 'm_openAction', 'm_saveAction', 'm_saveAsAction', 'm_exitAction']\n  \u274c file_actions_missing: []\n\nTOOLBAR:\n  \u2705 setupToolBar: True\n  \u2705 createMainToolBar: True\n  \u2705 addToolBar: True\n  \u2705 toolbar_actions: True\n  \u2705 toolbar_movable: True\n  \u2705 toolbar_floating: True\n\nDOCK_WIDGETS:\n  \u2705 setupDockWidgets: True\n  \u2705 QDockWidget: True\n  \u2705 addDockWidget: True\n  \u2705 toolbox_dock: True\n  \u2705 properties_dock: True\n  \u2705 object_names: True\n\nICON_SYSTEM:\n  \u2705 icon_files: {'src/resources/icons/phoenix-icon.svg': True, 'src/resources/icons/phx-icons.json': True}\n  \u2705 qrc_checks: {'phoenix_icon': True, 'phx_icons_json': True, 'font_files': True}\n\nPREFERENCES:\n  \u2705 language_files: {'language_page_h': True, 'language_page_cpp': True}\n  \u2705 cmake_includes: {'language_page_cpp': True, 'language_page_h': True}\n\n\ud83d\udcc4 Results saved to: /home/ec2-user/workspace/phoenix/ui_validation_results.json\n",
      "errors": ""
    },
    "ui_functionality": {
      "success": true,
      "output": "\ud83d\ude80 Phoenix UI Test Suite\n==================================================\n\ud83d\udd28 Validating Build:\n==============================\n\u2705 Build is recent\n\n\ud83d\udcc1 Checking Source Files:\n==============================\n\u2705 File menu found\n\u2705 Editors menu found\n\u2705 Analysis menu found\n\u2705 Tools menu found\n\u2705 Help menu found\n\u2705 Exit action found\n\u2705 Toolbar setup found\n\u2705 App icon found\n\n\ud83d\udda5\ufe0f  Running Application Test:\n==============================\nRunning: xvfb-run -a -s -screen 0 1024x768x24 /home/ec2-user/workspace/phoenix/build-test-mac/phoenix_app\n\u2705 Application started successfully\n\u23f0 Application timed out (expected)\n\n\u2705 UI Test Suite Completed\n",
      "errors": ""
    },
    "debug_analysis": {
      "success": true,
      "note": "Application ran without immediate crash (timeout expected)"
    }
  },
  "summary": {
    "passed": 4,
    "total": 4,
    "success_rate": 100.0
  }
}