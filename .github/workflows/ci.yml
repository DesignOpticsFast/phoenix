name: CI

permissions:
  contents: read

on:
  push:
    branches: [ "**" ]
    tags:    [ "v*" ]
    paths:
      - ".github/workflows/ci.yml"
      - "CMakeLists.txt"
      - "src/**"
      - "include/**"
      - "ui/**"
  pull_request:
    branches: [ "**" ]
    paths:
      - ".github/workflows/ci.yml"
      - "CMakeLists.txt"
      - "src/**"
      - "include/**"
      - "ui/**"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: macOS build (Qt 6.9.3 + Bedrock sibling)
    runs-on: macos-14
    timeout-minutes: 20

    steps:
      - name: Checkout Phoenix
        uses: actions/checkout@v4

      # Phoenix expects ../bedrock; make it a real sibling of $GITHUB_WORKSPACE
      - name: Checkout Bedrock as ../bedrock
        run: |
          cd "$GITHUB_WORKSPACE"
          git clone --depth=1 --branch main https://github.com/DesignOpticsFast/bedrock.git ../bedrock
          test -f ../bedrock/CMakeLists.txt

      - name: Install tools + OCCT (Homebrew)
        run: |
          brew update
          brew install cmake ninja opencascade ccache

      - name: Setup ccache dirs
        run: |
          mkdir -p ~/.cache/ccache
          echo "CCACHE_DIR=$HOME/.cache/ccache" >> $GITHUB_ENV
          echo "CCACHE_BASEDIR=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: ccache cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ matrix.compiler || 'gcc' }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake', '**/CMakePresets.json') }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ matrix.compiler || 'gcc' }}-
            ccache-${{ runner.os }}-

      - name: Install Qt 6.9.3
        uses: jurplel/install-qt-action@v4
        with:
          version: "6.9.3"
          cache: true

      - name: Print tool versions
        run: |
          cmake --version
          ninja --version
          ccache --version

      - name: Clean build dirs
        run: |
          rm -rf build build-ci

      - name: Configure (CMake)
        run: |
          OCCT_DIR="$(brew --prefix opencascade)/lib/cmake/opencascade"
          cmake -S . -B build-ci -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="${Qt6_DIR}" \
            -DOpenCASCADE_DIR="${OCCT_DIR}" \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_OSX_ARCHITECTURES=arm64

      - name: Build
        run: |
          ccache -z
          cmake --build build-ci --config Release -j
          ccache -s

      - name: Generate ccache stats
        run: |
          ccache -s > ccache-stats.txt

      - name: Upload ccache stats
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ccache-stats
          path: ccache-stats.txt
          retention-days: 7

      # Optional: upload logs on failure for faster triage
      - name: Upload CMake logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cmake-logs
          path: |
            build-ci/CMakeFiles/CMakeOutput.log
            build-ci/CMakeFiles/CMakeError.log